(* Generated Thu Nov 13 00:35:52 2014 *)
let list_sorted_insert : list -> nat -> list =
  let rec f1 (l1:list) : nat -> list =
    fun (n1:nat) ->
      match l1 with
        | Nil -> Cons (n1, Nil)
        | Cons (n2, l2) -> (match compare n2 n1 with
                              | LT -> Cons (n2, f1 l2 n1)
                              | EQ -> l1
                              | GT -> Cons (n1, l1))
  in
    f1
;;
